version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "email.verification:1:1"
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  minio:
    image: quay.io/minio/minio:RELEASE.2022-02-18T01-50-10Z
    volumes:
      - ./minio:/data
    ports:
      - 9000:9000
      - 9001:9001
    env_file: ./backend/.env
    command: minio server /data

  postgres:
    image: postgres
    restart: always
    env_file: ./backend/.env
    ports:
      - 5432:5432

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./redis:/data

  # backend:
  #   depends_on:
  #     - postgres
  #     - minio
  #     - redis
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   env_file: ./backend/.env
  #   ports:
  #     - 4000:4000
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - MINIO_ENDPOINT=minio
  #     - REDIS_HOST=redis

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   env_file: ./frontend/.env
  #   environment:
  #     - VITE_APP_URL=http://localhost:8080
  #   ports:
  #     - 8080:80


  